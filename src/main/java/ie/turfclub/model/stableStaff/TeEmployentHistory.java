package ie.turfclub.model.stableStaff;
// Generated 28-Apr-2015 14:57:35 by Hibernate Tools 3.4.0.CR1

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TeEmployentHistory generated by hbm2java
 */
@Entity
@Table(name = "te_employment_history", catalog = "trainers")
public class TeEmployentHistory implements java.io.Serializable {

	private Integer ehEmploymentId;
	private TeEmployees teEmployees;
	private TeTrainers teTrainers;
	private Date ehDateFrom;
	private Date ehDateTo;
	private String ehHoursWorked;
	private String ehEmploymentCategory;
	private String ehYear;
	private Float ehEarnings;
	private String ehTempCategory;
	private String ehPpsNumber;
	private Date employeeLastUpdated;

	public TeEmployentHistory() {
	}

	public TeEmployentHistory(TeEmployees teEmployees, TeTrainers teTrainers,
			Date ehDateFrom) {
		this.teEmployees = teEmployees;
		this.teTrainers = teTrainers;
		this.ehDateFrom = ehDateFrom;
	}

	public TeEmployentHistory(TeEmployees teEmployees, TeTrainers teTrainers,
			TeCards teCards, String ehCardType, Date ehDateFrom, Date ehDateTo,
			String ehHoursWorked, String ehEmploymentCategory, String ehYear,
			Float ehEarnings, String ehTempCategory) {
		this.teEmployees = teEmployees;
		this.teTrainers = teTrainers;
		this.ehDateFrom = ehDateFrom;
		this.ehDateTo = ehDateTo;
		this.ehHoursWorked = ehHoursWorked;
		this.ehEmploymentCategory = ehEmploymentCategory;
		this.ehYear = ehYear;
		this.ehEarnings = ehEarnings;
		this.ehTempCategory = ehTempCategory;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "eh_employment_id", unique = true, nullable = false)
	public Integer getEhEmploymentId() {
		return this.ehEmploymentId;
	}

	public void setEhEmploymentId(Integer ehEmploymentId) {
		this.ehEmploymentId = ehEmploymentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eh_employee_id", nullable = false)
	public TeEmployees getTeEmployees() {
		return this.teEmployees;
	}

	public void setTeEmployees(TeEmployees teEmployees) {
		this.teEmployees = teEmployees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eh_trainer_id", nullable = false)
	public TeTrainers getTeTrainers() {
		return this.teTrainers;
	}

	public void setTeTrainers(TeTrainers teTrainers) {
		this.teTrainers = teTrainers;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "employee_last_updated", length = 10)
	public Date getEmployeeLastUpdated() {
		return employeeLastUpdated;
	}

	public void setEmployeeLastUpdated(Date employeeLastUpdated) {
		this.employeeLastUpdated = employeeLastUpdated;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "eh_date_from", nullable = false, length = 10)
	public Date getEhDateFrom() {
		return this.ehDateFrom;
	}

	public void setEhDateFrom(Date ehDateFrom) {
		this.ehDateFrom = ehDateFrom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "eh_date_to", length = 10)
	public Date getEhDateTo() {
		return this.ehDateTo;
	}

	public void setEhDateTo(Date ehDateTo) {
		this.ehDateTo = ehDateTo;
	}

	@Column(name = "eh_hours_worked")
	public String getEhHoursWorked() {
		return this.ehHoursWorked;
	}

	public void setEhHoursWorked(String ehHoursWorked) {
		this.ehHoursWorked = ehHoursWorked;
	}

	@Column(name = "eh_employment_category", length = 26, nullable = true)
	public String getEhEmploymentCategory() {
		return this.ehEmploymentCategory;
	}

	public void setEhEmploymentCategory(String ehEmploymentCategory) {
		this.ehEmploymentCategory = ehEmploymentCategory;
	}

	@Column(name = "eh_year", length = 4)
	public String getEhYear() {
		return this.ehYear;
	}

	public void setEhYear(String ehYear) {
		this.ehYear = ehYear;
	}

	@Column(name = "eh_earnings", precision = 12, scale = 0)
	public Float getEhEarnings() {
		return this.ehEarnings;
	}

	public void setEhEarnings(Float ehEarnings) {
		this.ehEarnings = ehEarnings;
	}

	@Column(name = "eh_temp_category", length = 200)
	public String getEhTempCategory() {
		return this.ehTempCategory;
	}

	public void setEhTempCategory(String ehTempCategory) {
		this.ehTempCategory = ehTempCategory;
	}

	
	
	
	@Column(name = "eh_pps_number", length = 20)
	public String getEhPpsNumber() {
		return ehPpsNumber;
	}

	public void setEhPpsNumber(String ehPpsNumber) {
		this.ehPpsNumber = ehPpsNumber;
	}





	public static class TeEmployentHistoryComparatorDateTo implements Comparator<TeEmployentHistory> {

		  @Override
		  public int compare(TeEmployentHistory first,TeEmployentHistory second) {
			  Calendar now = Calendar.getInstance();
				
			  //CHANGE EARNINGS YEAR HERE
			  //Change here to -1 when earnings for 2015 should be entered  
			  now.add(Calendar.YEAR, -1);
			  if(first.getEhDateTo() == null){
				  
					//CHANGE EARNINGS YEAR HERE
				  int year = now.get(Calendar.YEAR);
				  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
				  Date date = null;
				try {
					date = sdf.parse(year + "-12-31");
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				  return date.compareTo(second.getEhDateTo());
			  }
			  else if(second.getEhDateTo() == null){
				  return first.getEhDateTo().compareTo(now.getTime());
			  }
			  else{
				  return first.getEhDateTo().compareTo(second.getEhDateTo());
			  }
			  
		  }
		  
		}
	public static class TeEmployentHistoryComparatorDateFrom implements Comparator<TeEmployentHistory> {

		  @Override
		  public int compare(TeEmployentHistory first,TeEmployentHistory second) {
		    return first.getEhDateFrom().compareTo(second.getEhDateFrom());
		  }
		  
		}
	
	
}
